{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","_this","props","deleteContact","_this2","this","_this$props$contact","contact","name","email","phone","react_default","a","createElement","className","onClick","setState","style","cursor","float","color","bind","react_router_dom","to","concat","marginRight","Component","connect","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","axios","delete","type","payload","t0","stop","_x3","apply","arguments","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","res","_context","get","sent","data","_x","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","layouts_TextInputGroup","_ref4","_callee4","_context4","post","_x4","EditContact","updContact","match","params","console","log","updateContact","nextProps","nextState","_nextProps$contact","getContact","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x5","Header","branding","href","About","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","layouts_Header","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a98b2578.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../actions/contactActions'\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id)\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: propTypes.object.isRequired,\n  deleteContact: propTypes.func.isRequired\n};\n\nexport default connect(null, { deleteContact })(Contact);\n","import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT, GET_CONTACT, UPDATE_CONTACT } from './types';\nimport axios from 'axios'\n\nexport const getContacts = () => async dispatch => {\n  const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n  dispatch({\n    type: GET_CONTACTS,\n    payload: res.data\n  })\n}\nexport const getContact = (id) => async dispatch => {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n  dispatch({\n    type: GET_CONTACT,\n    payload: res.data\n  })\n}\nexport const deleteContact = (id) => async dispatch => {\n  try {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    })\n  }\n  catch (e) {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    })\n  }\n}\nexport const addContact = (contact) => async dispatch => {\n  const res = await axios.post('https://jsonplaceholder.typicode.com/users/', contact)\n  dispatch({\n    type: ADD_CONTACT,\n    payload: res.data\n  })\n}\nexport const updateContact = (contact) => async dispatch => {\n  const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact)\n  dispatch({\n    type: UPDATE_CONTACT,\n    payload: res.data\n  })\n}","export const GET_CONTACTS = 'GET_CONTACTS';\nexport const DELETE_CONTACT = 'DELETE_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACTS';\nexport const GET_CONTACT = 'GET_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACTS';","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux'\nimport propTypes from 'prop-types'\nimport { getContacts } from '../../actions/contactActions'\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: propTypes.array.isRequired,\n  getContacts: propTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts\n})\n\nexport default connect(mapStateToProps, { getContacts })(Contacts);","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  placeholder: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  type: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n  error: propTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactActions'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: propTypes.func.isRequired\n}\n\nexport default connect(null, { addContact })(AddContact);\n\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getContact, updateContact } from '../../actions/contactActions'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n\n    console.log(updContact);\n\n    this.props.updateContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: propTypes.object.isRequired,\n  getContact: propTypes.func.isRequired,\n  updateContact: propTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n})\n\n\nexport default connect(mapStateToProps, { getContact, updateContact })(EditContact);\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"nav-bar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container w-75\">\n        <div className=\"row justify-content-between\">\n          <a href=\"/Contact-Manager/#/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My Contacts\"\n};\n\nHeader.propTypes = {\n  branding: propTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to mange contacts</p>\n      <p className=\"secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}","import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT, GET_CONTACT, UPDATE_CONTACT } from '../actions/types'\n\nconst initialState = {\n  contacts: [],\n  contact: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload\n      }\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      }\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      }\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport contactReducer from './contactReducer';\n\nexport default combineReducers({\n  contact: contactReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n  applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layouts/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}